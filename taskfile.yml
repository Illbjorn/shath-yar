version: '3'

vars:
  ##############################################################################
  # Version Info
  ver_path: .github/VERSION
  ver:
    sh: cat '{{ .ver_path }}'
  tag: 'v{{ .ver }}'

  ##############################################################################
  # Build Info
  dist_dir: 'shath-yar-{{ .ver }}'
  zip_name: '{{ .dist_dir }}.zip'
  toc_name: 'ShathYar.toc'
  toc_ver: 110007
  lua_files: [
    'ShathYar.lua',
  ]

  ##############################################################################
  # Repository Info
  repo_owner: Illbjorn
  repo_name: shath-yar

tasks:
  version:
    aliases: [v]
    desc: Outputs the current Shath'yar version.
    silent: true
    interactive: true
    cmd: echo '{{ .ver }}'

  # Task: Bump
  #
  # >> Examples
  #     $ task bump
  #     Incrementing version ['0.1.4']=>['0.1.5'].
  #
  #     $ task bump s=minor
  #     Incrementing version ['0.1.4']=>['0.2.0'].
  #
  #     $ task bump s=major
  #     Incrementing version ['0.1.4']=>['1.0.0'].
  #
  bump:
    aliases: [b]
    desc: Bumps the provided segment of the semver string at {{ .ver_path }}.
    vars:
      segment: '{{ if .s }}{{ .s }}{{ else }}patch{{ end }}'
    cmd: ver_path='{{ .ver_path }}' segment='{{ .segment }}' .github/scripts/bump.sh

  create-git-tag:
    internal: true
    cmd: git tag '{{ .tag }}'

  push-tag-ref:
    internal: true
    cmd: git push origin '{{ .tag }}'

  create-tagged-release:
    desc: Creates a Git tag from '{{ .ver_path }}' and pushes to that ref.
    cmds:
      - task: create-git-tag
      - task: push-tag-ref

  generate-toc:
    aliases: [toc]
    vars:
      files: '{{ join "\n" .lua_files }}'
    cmd: |
      cat << 'EOF' > '{{ .toc_name }}'
      ## Interface: {{ .toc_ver }}
      ## Title: Shath'Yar
      ## Notes: Speak the language of the Old Gods.
      ## Author: Illbjorn-Stormrage
      ## Version: {{ .ver }}

      {{ .files }}
      EOF

  release-notes:
    aliases: [rn]
    interactive: true
    silent: true
    desc: |
      Produces a set of markdown unordered list bullet points of each commit
      message between provided refs 's' (start) and 'e' (end).
    cmd: git log --pretty=format:'- %s' {{ .s }}...{{ .e }}

  create-release-file:
    aliases: [build]
    desc: Creates the zipped release file to attach to the GitHub release.
    cmds:
      # Clean up any zip files from previous builds
      - cmd: rm -rf *.zip
      # Create the dist directory
      - cmd: mkdir '{{ .dist_dir }}'
      # Defer cleanup of the dist directory
      - defer: rm -rf '{{ .dist_dir }}'
      # Generate the TOC file
      - task: generate-toc
      # Defer cleanup of the TOC file
      - defer: rm -rf '{{ .toc_name }}'
      # Copy all addon files to the dist directory
      - cmd: cp ShathYar.lua '{{ .dist_dir }}'
      - cmd: cp ShathYar.toc '{{ .dist_dir }}'
      - cmd: cp ShathYar.xml '{{ .dist_dir }}'
      - cmd: cp LICENSE '{{ .dist_dir }}'
      # Create the release zip file
      - cmd: zip -r '{{ .zip_name }}' '{{ .dist_dir }}'

  publish-github-release:
    desc: Publishes the release file to GitHub.
    env:
      tag: '{{ .tag }}'
      title: '{{ .title }}'
      body: '{{ .body }}'
      repo_owner: '{{ .repo_owner }}'
      repo_name: '{{ .repo_name }}'
      zip_name: '{{ .zip_name }}'
    cmds:
      - cmd: .github/scripts/publish-release.sh

  create-github-release:
    aliases: [cghr]
    desc: Creates a GitHub release.
    cmds:
      - task: create-release-file
      - task: publish-github-release
